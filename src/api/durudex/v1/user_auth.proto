// Copyright Â© 2022 Durudex
//
// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

syntax = "proto3";

package durudex.v1;

// Durudex User Authorization Service.
service UserAuthService {
  // User Sign Up.
  rpc UserSignUp(UserSignUpRequest) returns (UserSignUpResponse);
  // User Sign In.
  rpc UserSignIn(UserSignInRequest) returns (UserSignInResponse);
  // User Sign Out.
  rpc UserSignOut(UserSignOutRequest) returns (UserSignOutResponse);
  // Refresh user authentication token.
  rpc RefreshUserToken(RefreshUserTokenRequest) returns (RefreshUserTokenResponse);
}

// User Sign Up Request.
message UserSignUpRequest {
  // Unique username.
  string username = 1;
  // Ununique user email address.
  string email = 2;
  // User password.
  string password = 3;
  // Client secret key.
  string secret = 4;
  // Verification code.
  uint64 code = 5;
  // User ip address.
  string ip = 6;
}

// User Sign Up Response.
message UserSignUpResponse {
  // User authentication JWT access token.
  string access = 1;
  // User authorization refresh token.
  string refresh = 2;
}

// User Sign In Request.
message UserSignInRequest {
  // Username.
  string username = 1;
  // User password.
  string password = 2;
  // Client secret key.
  string secret = 3;
  // User ip address.
  string ip = 4;
}

// User Sign In Response.
message UserSignInResponse {
  // User authentication JWT access token.
  string access = 1;
  // User authorization refresh token.
  string refresh = 2;
}

// User Sign Out Request.
message UserSignOutRequest {
  // User authentication refresh token.
  string refresh = 1;
  // Client secret key.
  string secret = 2;
  // User ip address.
  string ip = 3;
}

// User Sign Out Response.
message UserSignOutResponse {}

// Refresh user authentication token request.
message RefreshUserTokenRequest {
  // User authentication refresh token.
  string refresh = 1;
  // Client secret key.
  string secret = 2;
  // User ip address.
  string ip = 3;
}

// Refresh user authentication token response.
message RefreshUserTokenResponse {
  // User authentication JWT access token.
  string access = 1;
}
