// Copyright Â© 2022 Durudex
//
// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

syntax = "proto3";

package durudex.v1;

import "durudex/type/timestamp.proto";

// Durudex User Service.
service UserService {
  // Getting a user by id.
  rpc GetUserById(GetUserByIdRequest) returns (GetUserByIdResponse);
  // Getting a user by credentials.
  rpc GetUserByCreds(GetUserByCredsRequest) returns (GetUserByCredsResponse);
  // Forgoting a user password.
  rpc ForgotUserPassword(ForgotUserPasswordRequest) returns (ForgotUserPasswordResponse);
  // Updating a user avatar.
  rpc UpdateUserAvatar(UpdateUserAvatarRequest) returns (UpdateUserAvatarResponse);
}

// Request for getting a user by id.
message GetUserByIdRequest {
  // User ksuid.
  bytes id = 1;
}

// Response for getting a user by id.
message GetUserByIdResponse {
  // Username.
  string username = 1;
  // User last visited timestamp.
  durudex.type.Timestamp last_visit = 2;
  // User verified status.
  bool verified = 3;
  // User avatar url.
  optional string avatar_url = 4;
}

// Request for getting a user by credentials.
message GetUserByCredsRequest {
  // Username.
  string username = 1;
  // User password.
  string password = 2;
}

// Response for getting a user by credentials.
message GetUserByCredsResponse {
  // User ksuid.
  bytes id = 1;
  // User email address.
  string email = 2;
  // User last visited timestamp.
  durudex.type.Timestamp last_visit = 3;
  // User verified status.
  bool verified = 4;
  // User avatar url.
  optional string avatar_url = 5;
}

// Request for forgoting a user password.
message ForgotUserPasswordRequest {
  // User email address.
  string email = 1;
  // New user password.
  string password = 2;
  // Verification code.
  uint64 code = 3;
}

// Response for forgoting a user password.
message ForgotUserPasswordResponse {}

// Request for updating a user avatar.
message UpdateUserAvatarRequest {
  // User ksuid.
  bytes id = 1;
  // User avatar url.
  string avatar_url = 2;
}

// Response for updating a user avatar.
message UpdateUserAvatarResponse {}
