// Copyright Â© 2022 Durudex
//
// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

syntax = "proto3";

package durudex.v1;

import "durudex/type/timestamp.proto";

// Durudex Post Service.
service PostService {
  // Create a new post.
  rpc CreatePost(CreatePostRequest) returns (CreatePostResponse);
  // Get a post by ID.
  rpc GetPostById(GetPostByIdRequest) returns (GetPostByIdResponse);
  // Getting author posts.
  rpc GetAuthorPosts(GetAuthorPostsRequest) returns (GetAuthorPostsResponse);
  // Delete a post.
  rpc DeletePost(DeletePostRequest) returns (DeletePostResponse);
  // Update a post.
  rpc UpdatePost(UpdatePostRequest) returns (UpdatePostResponse);
}

// Post message.
message Post {
  // Post ksuid.
  bytes id = 1;
  // Post author ksuid.
  bytes author_id = 2;
  // Post text.
  string text = 3;
  // Post update timestamp.
  optional durudex.type.Timestamp updated_at = 4;
}

// Request for creating a new post.
message CreatePostRequest {
  // Post author ksuid.
  bytes author_id = 1;
  // Post text.
  string text = 2;
}

// Response for creating a new post.
message CreatePostResponse {
  // Post ksuid.
  bytes id = 1;
}

// Request for getting a post by id.
message GetPostByIdRequest {
  // Post ksuid.
  bytes id = 1;
}

// Response for getting a post by id.
message GetPostByIdResponse {
  // Post author ksuid.
  bytes author_id = 1;
  // Post text.
  string text = 2;
  // Post update timestamp.
  optional durudex.type.Timestamp updated_at = 3;
}

// Request for getting author posts.
message GetAuthorPostsRequest {
  // Post author ksuid.
  bytes author_id = 1;
  // First post filter.
  optional int32 first = 2;
  // Last post filter.
  optional int32 last = 3;
}

// Response for getting author posts.
message GetAuthorPostsResponse {
  // Author posts.
  repeated Post posts = 1;
}

// Request for deleting a post.
message DeletePostRequest {
  // Post ksuid.
  bytes id = 1;
  // Post author ksuid.
  bytes author_id = 2;
}

// Response for deleting a post.
message DeletePostResponse {}

// Request for updating a post.
message UpdatePostRequest {
  // Post ksuid.
  bytes id = 1;
  // Post author ksuid.
  bytes author_id = 2;
  // Post text.
  string text = 3;
}

// Response for updating a post.
message UpdatePostResponse {}
