// Copyright Â© 2022 Durudex
//
// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

syntax = "proto3";

package durudex.v1;

import "durudex/type/timestamp.proto";

// Durudex Post Service.
service PostService {
  // Create a new post.
  rpc CreatePost(CreatePostRequest) returns (CreatePostResponse);
  // Getting a post.
  rpc GetPost(GetPostRequest) returns (GetPostResponse);
  // Getting a posts.
  rpc GetPosts(GetPostsRequest) returns (GetPostsResponse);
  // Delete a post.
  rpc DeletePost(DeletePostRequest) returns (DeletePostResponse);
  // Update a post.
  rpc UpdatePost(UpdatePostRequest) returns (UpdatePostResponse);
  // Getting total posts count.
  rpc GetTotalPostsCount(GetTotalPostsCountRequest) returns (GetTotalPostsCountResponse);
}

// Post message.
message Post {
  // Post ksuid.
  bytes id = 1;
  // Post author ksuid.
  optional bytes author_id = 2;
  // Post text.
  string text = 3;
  // Post update timestamp.
  optional durudex.type.Timestamp updated_at = 4;
}

// Query sort options.
message SortOptions {
  // First option.
  optional int32 first = 1;
  // Last option.
  optional int32 last = 2;
  // Before option.
  optional bytes before  = 3;
  // After option.
  optional bytes after = 4;
}

// Request for creating a new post.
message CreatePostRequest {
  // Post author ksuid.
  bytes author_id = 1;
  // Post text.
  string text = 2;
}

// Response for creating a new post.
message CreatePostResponse {
  // Post ksuid.
  bytes id = 1;
}

// Request for getting a post.
message GetPostRequest {
  // Post ksuid.
  bytes id = 1;
}

// Response for getting a post.
message GetPostResponse {
  // Post author ksuid.
  bytes author_id = 1;
  // Post text.
  string text = 2;
  // Post update timestamp.
  optional durudex.type.Timestamp updated_at = 3;
}

// Request for getting a posts.
message GetPostsRequest {
  // Post author ksuid.
  bytes author_id = 1;
  // Query sort options.
  SortOptions sort_options = 2;
}

// Response for getting a posts.
message GetPostsResponse {
  // Author posts.
  repeated Post posts = 1;
}

// Request for deleting a post.
message DeletePostRequest {
  // Post ksuid.
  bytes id = 1;
  // Post author ksuid.
  bytes author_id = 2;
}

// Response for deleting a post.
message DeletePostResponse {}

// Request for updating a post.
message UpdatePostRequest {
  // Post ksuid.
  bytes id = 1;
  // Post author ksuid.
  bytes author_id = 2;
  // Post text.
  string text = 3;
}

// Response for updating a post.
message UpdatePostResponse {}

// Request for getting total posts count.
message GetTotalPostsCountRequest {
  // Post author ksuid.
  bytes author_id = 1;
}

// Response fot getting total posts count.
message GetTotalPostsCountResponse {
  // Author post count.
  int32 count = 1;
}
